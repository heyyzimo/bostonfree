////  MapViewUI.swift//  BostonFree////  Created by user267597 on 12/6/24.//// MapViewUI.swiftimport UIKitimport MapKitclass MapViewUI: UIView {        let mapView = MKMapView()    let tableView = UITableView()    let detailsView = UIView()    let detailsLabel = UILabel()    let backButton = UIButton(type: .system)    let goButton = UIButton(type: .system)        override init(frame: CGRect) {        super.init(frame: frame)        self.backgroundColor = .white        setupLayout()    }        private func setupLayout() {        mapView.translatesAutoresizingMaskIntoConstraints = false        tableView.translatesAutoresizingMaskIntoConstraints = false        detailsView.translatesAutoresizingMaskIntoConstraints = false        detailsLabel.translatesAutoresizingMaskIntoConstraints = false        backButton.translatesAutoresizingMaskIntoConstraints = false        goButton.translatesAutoresizingMaskIntoConstraints = false                addSubview(mapView)        addSubview(tableView)        addSubview(detailsView)        detailsView.addSubview(detailsLabel)        detailsView.addSubview(backButton)        detailsView.addSubview(goButton)                 NSLayoutConstraint.activate([            mapView.topAnchor.constraint(equalTo: safeAreaLayoutGuide.topAnchor),            mapView.leftAnchor.constraint(equalTo: leftAnchor),            mapView.rightAnchor.constraint(equalTo: rightAnchor),            mapView.heightAnchor.constraint(equalTo: heightAnchor, multiplier: 0.4),                        tableView.topAnchor.constraint(equalTo: mapView.bottomAnchor),            tableView.leftAnchor.constraint(equalTo: leftAnchor),            tableView.rightAnchor.constraint(equalTo: rightAnchor),            tableView.bottomAnchor.constraint(equalTo: bottomAnchor),                        detailsView.topAnchor.constraint(equalTo: mapView.bottomAnchor),            detailsView.leftAnchor.constraint(equalTo: leftAnchor),            detailsView.rightAnchor.constraint(equalTo: rightAnchor),            detailsView.bottomAnchor.constraint(equalTo: bottomAnchor),            detailsLabel.topAnchor.constraint(equalTo: detailsView.topAnchor, constant: 60),            detailsLabel.leftAnchor.constraint(equalTo: detailsView.leftAnchor, constant: 16),            detailsLabel.rightAnchor.constraint(equalTo: detailsView.rightAnchor, constant: -16),            detailsLabel.bottomAnchor.constraint(lessThanOrEqualTo: detailsView.bottomAnchor, constant: -16),            backButton.topAnchor.constraint(equalTo: detailsView.topAnchor, constant: 16),            backButton.leftAnchor.constraint(equalTo: detailsView.leftAnchor, constant: 16),            backButton.widthAnchor.constraint(equalToConstant: 60),            backButton.heightAnchor.constraint(equalToConstant: 30),                        goButton.centerYAnchor.constraint(equalTo: backButton.centerYAnchor),            goButton.rightAnchor.constraint(equalTo: detailsView.rightAnchor, constant: -16),            goButton.widthAnchor.constraint(equalToConstant: 60),            goButton.heightAnchor.constraint(equalToConstant: 30)        ])                detailsView.backgroundColor = UIColor.systemGray6        detailsLabel.numberOfLines = 0        detailsLabel.font = UIFont.systemFont(ofSize: 16)        detailsView.isHidden = true                backButton.setTitle("Back", for: .normal)        goButton.setTitle("Go", for: .normal)        goButton.setTitleColor(.systemBlue, for: .normal)    }        required init?(coder: NSCoder) {        fatalError("init(coder:) has not been implemented")    }}